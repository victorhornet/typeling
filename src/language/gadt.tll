type Enum = A
          | B i64
          | C a:i64 b:i64  

type Tuple = Tuple i64 i64

fn main() -> i64 {
    a : Enum = construct A;
    b : Enum = construct B(1);

    c : Enum = construct C(b=20, a=10); // use named constructor, can be in any order
    d : Enum = construct C(10, 20);    // use unnamed constructor, must be in order 

/*
    x = b.0;
    y = c.b;
*/

    return 0;
}

{
    i64,
    {
        i64, i64
    }
}