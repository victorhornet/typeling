type Enum = A
          | B i64
          | C a:i64 b:i64  

type Tuple = Tuple i64 i64

fn main() -> i64 {
    a : Enum = construct A;
    b : Enum = construct B(1);


    c : Enum = construct C(b=20, a=10); // named constructors can be in any order

    d : Enum = construct C(10, 20);     // unnamed constructor must be in order 


    x : i64 = c.0;
    y : i64 = c.1;
    z : i64 = x + y;
    z = z + y;
    
    c.0 = z;

    return c.0 + c.1 + z;
}

