use std::str::FromStr;
use crate::ast::{Expr, OpCode};

grammar;

pub Expr: Box<Expr> = {
    Expr ExprOp Factor => Box::new(Expr::Op(<>)),
    Factor,
}

Factor: Box<Expr> = {
    Factor FactorOp Term => Box::new(Expr::Op(<>)),
    Term,
}

Term: Box<Expr> = {
    Num => Box::new(Expr::Number(<>)),
    "(" <Expr> ")",
}

Num: i32 = {
    r"[0-9]+" => FromStr::from_str(<>).unwrap(),
}

ExprOp: OpCode = {
    "+" => OpCode::Add,
    "-" => OpCode::Sub,
}

FactorOp: OpCode = {
    "*" => OpCode::Mul,
    "/" => OpCode::Div,
}
