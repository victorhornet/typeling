use std::str::FromStr;
use crate::calculator::ast::{Expr, OpCode};

grammar;

Tier<Op, NextTier>: Box<Expr> = {
    Tier<Op, NextTier> Op NextTier => Box::new(Expr::Op(<>)),
    NextTier,
}

pub Expr = Tier<ExprOp, Factor>;
Factor = Tier<FactorOp, Term>;

Term = {
    Num => Box::new(Expr::Number(<>)),
    "(" <Expr> ")",
}

Num: i32 = {
    r"[0-9]+" => FromStr::from_str(<>).unwrap(),
}

ExprOp: OpCode = {
    "+" => OpCode::Add,
    "-" => OpCode::Sub,
}

FactorOp: OpCode = {
    "*" => OpCode::Mul,
    "/" => OpCode::Div,
}
